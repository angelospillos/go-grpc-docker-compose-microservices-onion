# Start from golang base image
FROM golang:alpine as builder
LABEL maintainer="Angelos Pillos <angelospillos@gmail.com>"

# Install git.
RUN apk update && apk add --no-cache git

# Set the current working directory inside the container 
WORKDIR /app

# Build Arguments
ARG MICROSERVICE_DIR

# Copy go mod and sum files 
COPY ./${MICROSERVICE_DIR}/go.mod ./${MICROSERVICE_DIR}/go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and the go.sum files are not changed 
RUN go mod download 

# Copy the source from the current directory to the working Directory inside the container 
COPY ./${MICROSERVICE_DIR}/ .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/server/

# Start a new stage from scratch
FROM alpine:latest
RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage. Observe we also copied the .env file
COPY --from=builder /app/main .
COPY .env .       

#Command to run the executable
CMD ["./main"]